@inject GameState GameState
@inject NavigationManager NavMan
@implements IDisposable

<div class="row no-gutters" style="display:flex;">
    <div class="col custom-scroll" style="margin-right:60px;overflow-y:auto;">

        <div>

            <div class="progress" style="width:100%;border-radius:0px;position:relative;background-color:darkred;">
                <div class="progress-bar" style="width:@(GetPlayerHPPercent());background-color:forestgreen;position:relative">

                </div>
                <div style="position:absolute;left:50%;-webkit-transform:translateX(-50%);transform:translateX(-50%);color:white;">
                    @Player.Instance.CurrentHP / @Player.Instance.MaxHP
                </div>
                @if (GameState.CurrentFood != null)
                {
                    <div class="progress-bar" style="width:@(GetFoodProgress());background-color:#7d42b2;position:absolute;height:3px;z-index:3" 
                         @onmouseover="@(new Action<MouseEventArgs>(e => GameState.ShowTooltip(e, GameState.CurrentFood.Name, "Remaining:" + TimeSpan.FromSeconds((GameState.HealingTicks * GameState.CurrentFood.FoodInfo.HealSpeed / 5.0)).ToString("h'h 'm'm 's's'"))))"
                               @onmouseout="@(new Action(() => GameState.HideTooltip()))">

                    </div>
                }
            </div>
        </div>
@if (activeWindow == "Inventory")
{
    <InventoryViewerComponent></InventoryViewerComponent>
}
else if (activeWindow == "Skills")
{
    //Fix this
    <SkillsComponent></SkillsComponent>
}
else if (activeWindow == "Quests")
{
    //Fix this
    <QuestsComponent></QuestsComponent>
}
else if (activeWindow == "Crafting")
{
    //Fix top window
    <CraftingComponent></CraftingComponent>
}
else if (activeWindow == "Followers")
{
    //Fix this
    <FollowerComponent></FollowerComponent>
}
else if (activeWindow == "Equipment")
{

    <EquipmentManagementComponent></EquipmentManagementComponent>
}
else if(activeWindow == "Debug")
{
    <DebugComponent></DebugComponent>
}
else if(activeWindow == "EXP")
{
    //Fix this
    <ExperienceTrackerComponent></ExperienceTrackerComponent>
}
else if(activeWindow == "Loot")
{
    <LootTrackerComponent></LootTrackerComponent>
}


    </div>
    <div style="display:flex;flex-direction:column;position:absolute;right:0px;">
        <button class="sidebar-buttons" style="@GetBGColor("Inventory")" onclick="@(new Action(() => ChangeView("Inventory")))"><img src="/data/Images/WhiteInventory.png" style="height:42px;width:42px;">Inv</button>
        <button class="sidebar-buttons" style="@GetBGColor("Equipment")" onclick="@(new Action(() => ChangeView("Equipment")))"><img src="/data/Images/WhiteEquipment.png" style="height:42px;width:42px;">Equip</button>
        <button class="sidebar-buttons" style="@GetBGColor("Skills")" onclick="@(new Action(() => ChangeView("Skills")))"><img src="/data/Images/WhiteSkills.png" style="height:42px;width:42px;">Skills</button>
        <button class="sidebar-buttons" style="@GetBGColor("Quests")" onclick="@(new Action(() => ChangeView("Quests")))"><img src="/data/Images/WhiteQuests.png" style="height:42px;width:42px;">Quests</button>
        <button class="sidebar-buttons" style="@GetBGColor("Crafting")" onclick="@(new Action(() => ChangeView("Crafting")))"><img src="/data/Images/WhiteCraft.png" style="height:42px;width:42px;">Craft</button>
        <button class="sidebar-buttons" style="@GetBGColor("Followers")" onclick="@(new Action(() => ChangeView("Followers")))"><img src="/data/Images/WhiteFollowers.png" style="height:42px;width:42px;">Team</button>
        <button class="sidebar-buttons" style="@GetBGColor("EXP")" onclick="@(new Action(() => ChangeView("EXP")))"><img src="/data/Images/EXP.png" style="height:42px;width:42px;">EXP</button>
        <button class="sidebar-buttons" style="@GetBGColor("Loot")" onclick="@(new Action(() => ChangeView("Loot")))"><img src="/data/Images/Loot.png" style="height:42px;width:42px;">Loot</button>

        @if (IsTesting())
        {
            <!-- <button class="sidebar-buttons" style="@GetBGColor("Map")" onclick="@(new Action(() => OpenMap()))"><img src="/data/Images/Map.png" style="height:42px;width:42px;">Map</button> -->
            <button class="sidebar-buttons" style="@GetBGColor("Debug")" onclick="@(new Action(() => ChangeView("Debug")))"><img src="/data/Images/Alchemy.png" style="height:45px;width:45px;border:solid black 4px;">Debug</button>

        }
    </div>
    </div>


@code {

    private string activeWindow = "Inventory";

   
    private string GetPlayerHPPercent()
    {
        return (((double)Player.Instance.CurrentHP / Player.Instance.MaxHP) * 100d) + "%";
    }
    private string GetFoodProgress()
    {
        return (((double)GameState.HealingTicks / GameState.CurrentFood.FoodInfo.HealDuration) * 100d) + "%";
    }
    public void OpenMap()
    {
        GameState.ShowMap = !GameState.ShowMap;
        ChangeView("Map");
    }
    private string GetBGColor(string window)
    {
        if(activeWindow == window)
        {
            return "background-color:#303030";
        }
        return "background-color:#4d4d4d";
    }
    public void ChangeView(string view)
    {
        activeWindow = view;
        GameState.UpdateState();
    }
    public bool IsTesting()
    {
        return NavMan.BaseUri.Contains("localhost");

    }
    protected override void OnInitialized()
    {
        GameState.RightSidebarComponent = this;
        GameState.StateChanged += OnGameStateChanged;
    }
    public void Dispose()
    {
        GameState.StateChanged -= OnGameStateChanged;
    }
    void OnGameStateChanged(object sender, EventArgs e) => StateHasChanged();
}
